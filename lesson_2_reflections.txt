What happens when you initialize a repository? Why do you need to do it?

	When I initialize a repository, Git creates its gitty stuff that it needs
	to track my commits later on (which is contained in the .git directory).
	And I need to do it because otherwise Git could not track my changes and
	would be useless.
	Actually, the above isn't clear. When I initialize a repository, Git creates
	the repository in my working directory. I need to do it to be actually able
	to make use of the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is different from working directory because it can contain only
	some files, and from the repository because files there are still not
	commited. It's useful because it allows to separate current changes to the
	working directory

How can you use the staging area to make sure you have one commit per logical 
change?

	By adding only the file changes related to this logical change to the
	staging area before commiting

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	They would be helpful when I would like to add some new thing that I'm not
	sure I would like to keep, so I can add my changes to the new branch while
	keeping the master branch safe. Also they could be good for working on some
	separate feature adds separately (but likely it's more use when there is 
	more than one person working on a project)
